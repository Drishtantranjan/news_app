// Mocks generated by Mockito 5.4.4 from annotations
// in news_app/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:news_app/core/error/failures.dart' as _i7;
import 'package:news_app/core/network/dio_client.dart' as _i10;
import 'package:news_app/features/news_list/data/datasources/news_remote_data_source.dart'
    as _i9;
import 'package:news_app/features/news_list/data/models/news_model.dart' as _i3;
import 'package:news_app/features/news_list/domain/entities/news.dart' as _i8;
import 'package:news_app/features/news_list/domain/repositories/news_repository.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNewsModel_1 extends _i1.SmartFake implements _i3.NewsModel {
  _FakeNewsModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_2 extends _i1.SmartFake implements _i4.Dio {
  _FakeDio_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NewsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRepository extends _i1.Mock implements _i5.NewsRepository {
  MockNewsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.Failure, List<_i8.News>>> getNews(
          {int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNews,
          [],
          {#page: page},
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, List<_i8.News>>>.value(
            _FakeEither_0<_i7.Failure, List<_i8.News>>(
          this,
          Invocation.method(
            #getNews,
            [],
            {#page: page},
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, List<_i8.News>>>);

  @override
  _i6.Future<_i2.Either<_i7.Failure, _i8.News>> getNewsById(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewsById,
          [id],
        ),
        returnValue: _i6.Future<_i2.Either<_i7.Failure, _i8.News>>.value(
            _FakeEither_0<_i7.Failure, _i8.News>(
          this,
          Invocation.method(
            #getNewsById,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.Failure, _i8.News>>);
}

/// A class which mocks [NewsRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockNewsRemoteDataSource extends _i1.Mock
    implements _i9.NewsRemoteDataSource {
  MockNewsRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<List<_i3.NewsModel>> getNews({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getNews,
          [],
          {#page: page},
        ),
        returnValue: _i6.Future<List<_i3.NewsModel>>.value(<_i3.NewsModel>[]),
      ) as _i6.Future<List<_i3.NewsModel>>);

  @override
  _i6.Future<_i3.NewsModel> getNewsById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getNewsById,
          [id],
        ),
        returnValue: _i6.Future<_i3.NewsModel>.value(_FakeNewsModel_1(
          this,
          Invocation.method(
            #getNewsById,
            [id],
          ),
        )),
      ) as _i6.Future<_i3.NewsModel>);
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i10.DioClient {
  MockDioClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_2(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i4.Dio);
}
